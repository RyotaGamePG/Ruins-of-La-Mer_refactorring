//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBFilter
// {
//
//   float4 weights[256];               // Offset:    0 Size:  4096
//   float kernelSize;                  // Offset: 4096 Size:     4
//   float2 texcel;                     // Offset: 4100 Size:     8
//   float dummy;                       // Offset: 4108 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler0                          sampler      NA          NA             s0      1 
// texture0                          texture  float4          2d             t0      1 
// CBFilter                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[257], dynamicIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.color.x; v1.y <- pin.color.y; v1.z <- pin.color.z; v1.w <- pin.color.w; 
//   v2.x <- pin.texcoord.x; v2.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 8 "D:\Employment_Works\Ruins of La Mer\HLSL\GaussianBlurPS.hlsl"
itof r0.xyz, l(0, 0, 0, 0)  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 9
itof r1.w, l(1)  // r1.w <- color.w

#line 10
mov r0.w, l(0)  // r0.w <- i
mov r1.xyz, r0.xyzx  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z
mov r2.x, r0.w  // r2.x <- i
loop 
  itof r2.y, r2.x
  mul r2.z, cb0[256].x, cb0[256].x
  lt r2.y, r2.y, r2.z
  breakc_z r2.y

#line 12
  mul r2.yz, cb0[256].yyzy, cb0[r2.x + 0].xxyx  // r2.y <- offset.x; r2.z <- offset.y

#line 13
  mov r2.w, cb0[r2.x + 0].z  // r2.w <- weight

#line 14
  add r2.yz, r2.yyzy, v2.xxyx
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, r2.yzyy, t0.xyzw, s0
  mul r2.yzw, r2.wwww, r3.xxyz
  add r1.xyz, r1.xyzx, r2.yzwy

#line 15
  iadd r2.x, r2.x, l(1)
endloop 

#line 17
mul o0.xyzw, r1.xyzw, v1.xyzw
ret 
// Approximately 20 instruction slots used
