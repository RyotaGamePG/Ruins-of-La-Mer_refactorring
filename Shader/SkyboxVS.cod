//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   float4 viewPosition;               // Offset:    0 Size:    16 [unused]
//   row_major float4x4 inverseView;    // Offset:   16 Size:    64
//   row_major float4x4 inverseProjection;// Offset:   80 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbScene                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// POSITION                 0   xyz         2     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[9], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   v1.x <- color.x; v1.y <- color.y; v1.z <- color.z; v1.w <- color.w; 
//   v2.x <- texcoord.x; v2.y <- texcoord.y; 
//   o2.x <- <main return value>.worldPosition.x; o2.y <- <main return value>.worldPosition.y; o2.z <- <main return value>.worldPosition.z; 
//   o1.x <- <main return value>.color.x; o1.y <- <main return value>.color.y; o1.z <- <main return value>.color.z; o1.w <- <main return value>.color.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 6 "C:\Users\sukai\Desktop\Ruins of La Mer\Ruins of La Mer\HLSL\SkyboxVS.hlsl"
mov r0.xyzw, v0.xyzw  // r0.x <- vout.position.x; r0.y <- vout.position.y; r0.z <- vout.position.z; r0.w <- vout.position.w

#line 7
mov r1.xyzw, v1.xyzw  // r1.x <- vout.color.x; r1.y <- vout.color.y; r1.z <- vout.color.z; r1.w <- vout.color.w

#line 10
mul r2.xyzw, v0.xxxx, cb0[5].xyzw
mul r3.xyzw, v0.yyyy, cb0[6].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, v0.zzzz, cb0[7].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, v0.wwww, cb0[8].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw  // r2.x <- p.x; r2.y <- p.y; r2.z <- p.z; r2.w <- p.w

#line 11
div r2.xyzw, r2.xyzw, r2.wwww

#line 12
mul r3.xyz, r2.xxxx, cb0[1].xyzx
mul r4.xyz, r2.yyyy, cb0[2].xyzx
add r3.xyz, r3.xyzx, r4.xyzx
mul r2.xyz, r2.zzzz, cb0[3].xyzx
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.xyz, r2.wwww, cb0[4].xyzx
add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- p.x; r2.y <- p.y; r2.z <- p.z

#line 13
mov r2.xyz, r2.xyzx  // r2.x <- vout.worldPosition.x; r2.y <- vout.worldPosition.y; r2.z <- vout.worldPosition.z

#line 14
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r1.xyzw
mov o2.xyz, r2.xyzx
ret 
// Approximately 22 instruction slots used
