//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   float4 viewPosition;               // Offset:    0 Size:    16
//   row_major float4x4 viewProjection; // Offset:   16 Size:    64 [unused]
//   float4 ambientLightColor;          // Offset:   80 Size:    16
//   
//   struct DirectionalLightData
//   {
//       
//       float4 direction;              // Offset:   96
//       float4 color;                  // Offset:  112
//
//   } directionalLightData;            // Offset:   96 Size:    32
//   
//   struct PointLightData
//   {
//       
//       float4 position;               // Offset:  128
//       float4 color;                  // Offset:  144
//       float range;                   // Offset:  160
//       float3 dummy;                  // Offset:  164
//
//   } pointLightData[8];               // Offset:  128 Size:   384
//   
//   struct SpotLightData
//   {
//       
//       float4 position;               // Offset:  512
//       float4 direction;              // Offset:  528
//       float4 color;                  // Offset:  544
//       float range;                   // Offset:  560
//       float innerCorn;               // Offset:  564
//       float outerCorn;               // Offset:  568
//       float dummy;                   // Offset:  572
//
//   } spotLightData[8];                // Offset:  512 Size:   512
//   int pointLightCount;               // Offset: 1024 Size:     4
//   int spotLightCount;                // Offset: 1028 Size:     4
//   float2 dummy2;                     // Offset: 1032 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuseMapSamplerState            sampler      NA          NA             s0      1 
// diffuseMap                        texture  float4          2d             t0      1 
// toonTex                           texture  float4          2d             t1      1 
// CbScene                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
// COLOR                    0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[65], dynamicIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 15
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.world_position.x; v1.y <- pin.world_position.y; v1.z <- pin.world_position.z; 
//   v2.x <- pin.normal.x; v2.y <- pin.normal.y; v2.z <- pin.normal.z; 
//   v3.x <- pin.texcoord.x; v3.y <- pin.texcoord.y; 
//   v4.x <- pin.color.x; v4.y <- pin.color.y; v4.z <- pin.color.z; v4.w <- pin.color.w; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 9 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0
mul r0.xyzw, r0.xyzw, v4.xyzw  // r0.x <- diffuseColor.x; r0.y <- diffuseColor.y; r0.z <- diffuseColor.z; r0.w <- diffuseColor.w

#line 11
dp3 r1.x, v2.xyzx, v2.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v2.xyzx  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z

#line 12
dp3 r1.w, cb0[6].xyzx, cb0[6].xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, cb0[6].xyzx  // r2.x <- L.x; r2.y <- L.y; r2.z <- L.z

#line 13
mov r3.xyz, -v1.xyzx
add r3.xyz, r3.xyzx, cb0[0].xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx  // r3.x <- E.x; r3.y <- E.y; r3.z <- E.z

#line 16
itof r4.xyz, l(1, 1, 1, 0)  // r4.x <- ka.x; r4.y <- ka.y; r4.z <- ka.z

#line 17
itof r5.xyz, l(1, 1, 1, 0)  // r5.x <- kd.x; r5.y <- kd.y; r5.z <- kd.z

#line 18
itof r6.xyz, l(1, 1, 1, 0)  // r6.x <- ks.x; r6.y <- ks.y; r6.z <- ks.z

#line 19
itof r1.w, l(128)  // r1.w <- shiness

#line 22
mul r4.xyz, r4.xyzx, cb0[5].xyzx  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z

#line 25
nop 
nop 
nop 
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r7.xyz, cb0[7].xyzx
mov r5.xyz, r5.xyzx

#line 130 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
mov r8.xyz, -r2.xyzx
dp3 r2.w, r1.xyzx, r8.xyzx
mul r2.w, r2.w, l(0.500000)
add r2.w, r2.w, l(0.500000)
max r2.w, r2.w, l(0.000000)
min r8.x, r2.w, l(1.000000)  // r8.x <- u

#line 133
mov r8.y, l(0.100000)
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r8.xyxx, t1.xyzw, s0  // r8.x <- c.x; r8.y <- c.y; r8.z <- c.z

#line 135
mul r7.xyz, r7.xyzx, r8.xyzx
mul r7.xyz, r5.xyzx, r7.xyzx  // r7.x <- <CalcToonDiffuse return value>.x; r7.y <- <CalcToonDiffuse return value>.y; r7.z <- <CalcToonDiffuse return value>.z

#line 25 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
mov r7.xyz, r7.xyzx  // r7.x <- directionalDiffuse.x; r7.y <- directionalDiffuse.y; r7.z <- directionalDiffuse.z

#line 26
nop 
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r8.xyz, cb0[7].xyzx
mov r3.xyz, r3.xyzx
mov r1.w, r1.w
mov r6.xyz, r6.xyzx

#line 74 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
dp3 r2.w, r2.xyzx, r1.xyzx
add r2.w, r2.w, r2.w
mov r2.w, -r2.w
mul r9.xyz, r1.xyzx, r2.wwww
add r2.xyz, r2.xyzx, r9.xyzx  // r2.x <- R.x; r2.y <- R.y; r2.z <- R.z

#line 78
dp3 r2.x, r3.xyzx, r2.xyzx
itof r2.y, l(0)
max r2.x, r2.y, r2.x  // r2.x <- d

#line 84
log r2.x, r2.x
mul r2.x, r1.w, r2.x
exp r2.x, r2.x  // r2.x <- d

#line 87
mul r2.xyz, r2.xxxx, r8.xyzx
mul r2.xyz, r6.xyzx, r2.xyzx  // r2.x <- <CalcPhongSpecular return value>.x; r2.y <- <CalcPhongSpecular return value>.y; r2.z <- <CalcPhongSpecular return value>.z

#line 26 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
mov r2.xyz, r2.xyzx  // r2.x <- directionalSpecular.x; r2.y <- directionalSpecular.y; r2.z <- directionalSpecular.z

#line 29
itof r8.xyz, l(0, 0, 0, 0)  // r8.x <- pointDiffuse.x; r8.y <- pointDiffuse.y; r8.z <- pointDiffuse.z

#line 30
itof r9.xyz, l(0, 0, 0, 0)  // r9.x <- pointSpecular.x; r9.y <- pointSpecular.y; r9.z <- pointSpecular.z

#line 32
mov r2.w, l(0)  // r2.w <- i
ilt r3.w, r2.w, cb0[64].x
not r4.w, r3.w
if_nz r3.w

#line 35
  mov r10.xyz, -cb0[8].xyzx
  add r10.xyz, r10.xyzx, v1.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z

#line 38
  dp3 r5.w, r10.xyzx, r10.xyzx
  sqrt r5.w, r5.w  // r5.w <- lightLength

#line 41
  ge r6.w, r5.w, cb0[10].x
  if_nz r6.w

#line 42
    iadd r2.w, r2.w, l(1)
  endif 

#line 45
  not r7.w, r6.w
  not r7.w, r7.w
  if_z r6.w
    imul null, r8.w, r2.w, l(3)
    div r8.w, r5.w, cb0[r8.w + 10].x
    mov r8.w, -r8.w
    add r8.w, r8.w, l(1.000000)
    max r8.w, r8.w, l(0.000000)
    min r8.w, r8.w, l(1.000000)  // r8.w <- attenuate

#line 47
    div r10.xyz, r10.xyzx, r5.wwww

#line 48
    nop 
    nop 
    nop 
    mov r10.xyz, r10.xyzx
    imul null, r5.w, r2.w, l(3)
    mov r11.xyz, cb0[r5.w + 9].xyzx

#line 130 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    mov r12.xyz, -r10.xyzx
    dp3 r5.w, r1.xyzx, r12.xyzx
    mul r5.w, r5.w, l(0.500000)
    add r5.w, r5.w, l(0.500000)
    max r5.w, r5.w, l(0.000000)
    min r12.x, r5.w, l(1.000000)  // r12.x <- u

#line 133
    mov r12.y, l(0.100000)
    sample_indexable(texture2d)(float,float,float,float) r12.xyz, r12.xyxx, t1.xyzw, s0  // r12.x <- c.x; r12.y <- c.y; r12.z <- c.z

#line 135
    mul r11.xyz, r11.xyzx, r12.xyzx
    mul r11.xyz, r5.xyzx, r11.xyzx  // r11.x <- <CalcToonDiffuse return value>.x; r11.y <- <CalcToonDiffuse return value>.y; r11.z <- <CalcToonDiffuse return value>.z

#line 48 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r11.xyz, r8.wwww, r11.xyzx
    add r8.xyz, r8.xyzx, r11.xyzx

#line 50
    nop 
    mov r1.xyz, r1.xyzx
    mov r10.xyz, r10.xyzx
    imul null, r5.w, r2.w, l(3)
    mov r11.xyz, cb0[r5.w + 9].xyzx

#line 74 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    dp3 r5.w, r10.xyzx, r1.xyzx
    add r5.w, r5.w, r5.w
    mov r5.w, -r5.w
    mul r12.xyz, r1.xyzx, r5.wwww
    add r10.xyz, r10.xyzx, r12.xyzx  // r10.x <- R.x; r10.y <- R.y; r10.z <- R.z

#line 78
    dp3 r5.w, r3.xyzx, r10.xyzx
    itof r9.w, l(0)
    max r5.w, r5.w, r9.w  // r5.w <- d

#line 84
    log r5.w, r5.w
    mul r5.w, r1.w, r5.w
    exp r5.w, r5.w  // r5.w <- d

#line 87
    mul r10.xyz, r5.wwww, r11.xyzx
    mul r10.xyz, r6.xyzx, r10.xyzx  // r10.x <- <CalcPhongSpecular return value>.x; r10.y <- <CalcPhongSpecular return value>.y; r10.z <- <CalcPhongSpecular return value>.z

#line 50 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r10.xyz, r8.wwww, r10.xyzx
    add r9.xyz, r9.xyzx, r10.xyzx

#line 51
  endif 
  or r5.w, r6.w, r7.w

#line 32
  if_z r5.w
    iadd r2.w, r2.w, l(1)
  endif 

#line 52
endif 

#line 32
not r4.w, r4.w
and r3.w, r3.w, r4.w
ilt r4.w, r2.w, cb0[64].x
and r3.w, r3.w, r4.w
not r4.w, r3.w
ilt r5.w, r2.w, cb0[64].x
if_nz r5.w

#line 35
  mov r10.xyz, -cb0[11].xyzx
  add r10.xyz, r10.xyzx, v1.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z

#line 38
  dp3 r5.w, r10.xyzx, r10.xyzx
  sqrt r5.w, r5.w  // r5.w <- lightLength

#line 41
  ge r6.w, r5.w, cb0[13].x
  if_nz r6.w

#line 42
    iadd r7.w, l(1), l(1)  // r7.w <- i
  else   // Prior locations: r2.w <- i
    mov r7.w, l(1)  // r7.w <- i
  endif 

#line 45
  not r8.w, r6.w
  not r8.w, r8.w
  if_z r6.w
    imul null, r9.w, r7.w, l(3)
    div r9.w, r5.w, cb0[r9.w + 10].x
    mov r9.w, -r9.w
    add r9.w, r9.w, l(1.000000)
    max r9.w, r9.w, l(0.000000)
    min r9.w, r9.w, l(1.000000)  // r9.w <- attenuate

#line 47
    div r10.xyz, r10.xyzx, r5.wwww

#line 48
    nop 
    nop 
    nop 
    mov r10.xyz, r10.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z
    imul null, r5.w, r7.w, l(3)
    mov r11.xyz, cb0[r5.w + 9].xyzx  // r11.x <- lightColor.x; r11.y <- lightColor.y; r11.z <- lightColor.z

#line 130 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    mov r12.xyz, -r10.xyzx
    dp3 r5.w, r1.xyzx, r12.xyzx
    mul r5.w, r5.w, l(0.500000)
    add r5.w, r5.w, l(0.500000)
    max r5.w, r5.w, l(0.000000)
    min r12.x, r5.w, l(1.000000)  // r12.x <- u

#line 133
    mov r12.y, l(0.100000)
    sample_indexable(texture2d)(float,float,float,float) r12.xyz, r12.xyxx, t1.xyzw, s0  // r12.x <- c.x; r12.y <- c.y; r12.z <- c.z

#line 135
    mul r11.xyz, r11.xyzx, r12.xyzx
    mul r11.xyz, r5.xyzx, r11.xyzx  // r11.x <- <CalcToonDiffuse return value>.x; r11.y <- <CalcToonDiffuse return value>.y; r11.z <- <CalcToonDiffuse return value>.z

#line 48 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r11.xyz, r9.wwww, r11.xyzx
    add r8.xyz, r8.xyzx, r11.xyzx

#line 50
    nop 
    mov r1.xyz, r1.xyzx
    mov r10.xyz, r10.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z
    imul null, r5.w, r7.w, l(3)
    mov r11.xyz, cb0[r5.w + 9].xyzx  // r11.x <- lightColor.x; r11.y <- lightColor.y; r11.z <- lightColor.z

#line 74 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    dp3 r5.w, r10.xyzx, r1.xyzx
    add r5.w, r5.w, r5.w
    mov r5.w, -r5.w
    mul r12.xyz, r1.xyzx, r5.wwww
    add r10.xyz, r10.xyzx, r12.xyzx  // r10.x <- R.x; r10.y <- R.y; r10.z <- R.z

#line 78
    dp3 r5.w, r3.xyzx, r10.xyzx
    itof r10.x, l(0)
    max r5.w, r5.w, r10.x  // r5.w <- d

#line 84
    log r5.w, r5.w
    mul r5.w, r1.w, r5.w
    exp r5.w, r5.w  // r5.w <- d

#line 87
    mul r10.xyz, r5.wwww, r11.xyzx
    mul r10.xyz, r6.xyzx, r10.xyzx  // r10.x <- <CalcPhongSpecular return value>.x; r10.y <- <CalcPhongSpecular return value>.y; r10.z <- <CalcPhongSpecular return value>.z

#line 50 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r10.xyz, r9.wwww, r10.xyzx
    add r9.xyz, r9.xyzx, r10.xyzx

#line 51
  endif 
  or r5.w, r6.w, r8.w

#line 32
  if_z r5.w
    iadd r7.w, r7.w, l(1)
  endif 

#line 52
else   // Prior locations: r2.w <- i
  mov r7.w, r2.w  // r7.w <- i
endif 

#line 32
not r4.w, r4.w
and r3.w, r3.w, r4.w
ilt r4.w, r7.w, cb0[64].x
and r3.w, r3.w, r4.w
not r4.w, r3.w
ilt r5.w, r2.w, cb0[64].x
ilt r6.w, r7.w, cb0[64].x
and r5.w, r5.w, r6.w
if_nz r5.w

#line 35
  mov r10.xyz, -cb0[14].xyzx
  add r10.xyz, r10.xyzx, v1.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z

#line 38
  dp3 r5.w, r10.xyzx, r10.xyzx
  sqrt r5.w, r5.w  // r5.w <- lightLength

#line 41
  ge r6.w, r5.w, cb0[16].x
  if_nz r6.w

#line 42
    iadd r8.w, l(1), l(2)  // r8.w <- i
  else   // Prior locations: r7.w <- i
    mov r8.w, l(2)  // r8.w <- i
  endif 

#line 45
  not r9.w, r6.w
  not r9.w, r9.w
  if_z r6.w
    imul null, r10.w, r8.w, l(3)
    div r10.w, r5.w, cb0[r10.w + 10].x
    mov r10.w, -r10.w
    add r10.w, r10.w, l(1.000000)
    max r10.w, r10.w, l(0.000000)
    min r10.w, r10.w, l(1.000000)  // r10.w <- attenuate

#line 47
    div r10.xyz, r10.xyzx, r5.wwww

#line 48
    nop 
    nop 
    nop 
    mov r10.xyz, r10.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z
    imul null, r5.w, r8.w, l(3)
    mov r11.xyz, cb0[r5.w + 9].xyzx  // r11.x <- lightColor.x; r11.y <- lightColor.y; r11.z <- lightColor.z

#line 130 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    mov r12.xyz, -r10.xyzx
    dp3 r5.w, r1.xyzx, r12.xyzx
    mul r5.w, r5.w, l(0.500000)
    add r5.w, r5.w, l(0.500000)
    max r5.w, r5.w, l(0.000000)
    min r12.x, r5.w, l(1.000000)  // r12.x <- u

#line 133
    mov r12.y, l(0.100000)
    sample_indexable(texture2d)(float,float,float,float) r12.xyz, r12.xyxx, t1.xyzw, s0  // r12.x <- c.x; r12.y <- c.y; r12.z <- c.z

#line 135
    mul r11.xyz, r11.xyzx, r12.xyzx
    mul r11.xyz, r5.xyzx, r11.xyzx  // r11.x <- <CalcToonDiffuse return value>.x; r11.y <- <CalcToonDiffuse return value>.y; r11.z <- <CalcToonDiffuse return value>.z

#line 48 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r11.xyz, r10.wwww, r11.xyzx
    add r8.xyz, r8.xyzx, r11.xyzx

#line 50
    nop 
    mov r1.xyz, r1.xyzx
    mov r10.xyz, r10.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z
    imul null, r5.w, r8.w, l(3)
    mov r11.xyz, cb0[r5.w + 9].xyzx  // r11.x <- lightColor.x; r11.y <- lightColor.y; r11.z <- lightColor.z

#line 74 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    dp3 r5.w, r10.xyzx, r1.xyzx
    add r5.w, r5.w, r5.w
    mov r5.w, -r5.w
    mul r12.xyz, r1.xyzx, r5.wwww
    add r10.xyz, r10.xyzx, r12.xyzx  // r10.x <- R.x; r10.y <- R.y; r10.z <- R.z

#line 78
    dp3 r5.w, r3.xyzx, r10.xyzx
    itof r10.x, l(0)
    max r5.w, r5.w, r10.x  // r5.w <- d

#line 84
    log r5.w, r5.w
    mul r5.w, r1.w, r5.w
    exp r5.w, r5.w  // r5.w <- d

#line 87
    mul r10.xyz, r5.wwww, r11.xyzx
    mul r10.xyz, r6.xyzx, r10.xyzx  // r10.x <- <CalcPhongSpecular return value>.x; r10.y <- <CalcPhongSpecular return value>.y; r10.z <- <CalcPhongSpecular return value>.z

#line 50 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r10.xyz, r10.wwww, r10.xyzx
    add r9.xyz, r9.xyzx, r10.xyzx

#line 51
  endif 
  or r5.w, r6.w, r9.w

#line 32
  if_z r5.w
    iadd r8.w, r8.w, l(1)
  endif 

#line 52
else   // Prior locations: r7.w <- i
  mov r8.w, r7.w  // r8.w <- i
endif 

#line 32
not r4.w, r4.w
and r3.w, r3.w, r4.w
ilt r4.w, r8.w, cb0[64].x
and r3.w, r3.w, r4.w
not r4.w, r3.w
ilt r2.w, r2.w, cb0[64].x
ilt r5.w, r7.w, cb0[64].x
and r2.w, r2.w, r5.w
ilt r5.w, r8.w, cb0[64].x
and r2.w, r2.w, r5.w
if_nz r2.w

#line 35
  mov r10.xyz, -cb0[17].xyzx
  add r10.xyz, r10.xyzx, v1.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z

#line 38
  dp3 r2.w, r10.xyzx, r10.xyzx
  sqrt r2.w, r2.w  // r2.w <- lightLength

#line 41
  ge r5.w, r2.w, cb0[19].x
  if_nz r5.w

#line 42
    iadd r8.w, l(1), l(3)
  else 
    mov r8.w, l(3)
  endif 

#line 45
  not r6.w, r5.w
  not r6.w, r6.w
  if_z r5.w
    imul null, r7.w, r8.w, l(3)
    div r7.w, r2.w, cb0[r7.w + 10].x
    mov r7.w, -r7.w
    add r7.w, r7.w, l(1.000000)
    max r7.w, r7.w, l(0.000000)
    min r7.w, r7.w, l(1.000000)  // r7.w <- attenuate

#line 47
    div r10.xyz, r10.xyzx, r2.wwww

#line 48
    nop 
    nop 
    nop 
    mov r10.xyz, r10.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z
    imul null, r2.w, r8.w, l(3)
    mov r11.xyz, cb0[r2.w + 9].xyzx  // r11.x <- lightColor.x; r11.y <- lightColor.y; r11.z <- lightColor.z

#line 130 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    mov r12.xyz, -r10.xyzx
    dp3 r2.w, r1.xyzx, r12.xyzx
    mul r2.w, r2.w, l(0.500000)
    add r2.w, r2.w, l(0.500000)
    max r2.w, r2.w, l(0.000000)
    min r12.x, r2.w, l(1.000000)  // r12.x <- u

#line 133
    mov r12.y, l(0.100000)
    sample_indexable(texture2d)(float,float,float,float) r12.xyz, r12.xyxx, t1.xyzw, s0  // r12.x <- c.x; r12.y <- c.y; r12.z <- c.z

#line 135
    mul r11.xyz, r11.xyzx, r12.xyzx
    mul r11.xyz, r5.xyzx, r11.xyzx  // r11.x <- <CalcToonDiffuse return value>.x; r11.y <- <CalcToonDiffuse return value>.y; r11.z <- <CalcToonDiffuse return value>.z

#line 48 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r11.xyz, r7.wwww, r11.xyzx
    add r8.xyz, r8.xyzx, r11.xyzx

#line 50
    nop 
    mov r1.xyz, r1.xyzx
    mov r10.xyz, r10.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z
    imul null, r2.w, r8.w, l(3)
    mov r11.xyz, cb0[r2.w + 9].xyzx  // r11.x <- lightColor.x; r11.y <- lightColor.y; r11.z <- lightColor.z

#line 74 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    dp3 r2.w, r10.xyzx, r1.xyzx
    add r2.w, r2.w, r2.w
    mov r2.w, -r2.w
    mul r12.xyz, r1.xyzx, r2.wwww
    add r10.xyz, r10.xyzx, r12.xyzx  // r10.x <- R.x; r10.y <- R.y; r10.z <- R.z

#line 78
    dp3 r2.w, r3.xyzx, r10.xyzx
    itof r9.w, l(0)
    max r2.w, r2.w, r9.w  // r2.w <- d

#line 84
    log r2.w, r2.w
    mul r2.w, r1.w, r2.w
    exp r2.w, r2.w  // r2.w <- d

#line 87
    mul r10.xyz, r2.wwww, r11.xyzx
    mul r10.xyz, r6.xyzx, r10.xyzx  // r10.x <- <CalcPhongSpecular return value>.x; r10.y <- <CalcPhongSpecular return value>.y; r10.z <- <CalcPhongSpecular return value>.z

#line 50 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r10.xyz, r7.wwww, r10.xyzx
    add r9.xyz, r9.xyzx, r10.xyzx

#line 51
  endif 
  or r2.w, r5.w, r6.w

#line 32
  if_z r2.w
    iadd r8.w, r8.w, l(1)
  endif 

#line 52
endif 

#line 32
not r2.w, r4.w
and r2.w, r2.w, r3.w
ilt r3.w, r8.w, cb0[64].x
and r2.w, r2.w, r3.w
not r3.w, r2.w
if_nz r2.w

#line 35
  mov r10.xyz, -cb0[20].xyzx
  add r10.xyz, r10.xyzx, v1.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z

#line 38
  dp3 r4.w, r10.xyzx, r10.xyzx
  sqrt r4.w, r4.w  // r4.w <- lightLength

#line 41
  ge r5.w, r4.w, cb0[22].x
  if_nz r5.w

#line 42
    iadd r8.w, l(1), l(4)
  else 
    mov r8.w, l(4)
  endif 

#line 45
  not r6.w, r5.w
  not r6.w, r6.w
  if_z r5.w
    imul null, r7.w, r8.w, l(3)
    div r7.w, r4.w, cb0[r7.w + 10].x
    mov r7.w, -r7.w
    add r7.w, r7.w, l(1.000000)
    max r7.w, r7.w, l(0.000000)
    min r7.w, r7.w, l(1.000000)  // r7.w <- attenuate

#line 47
    div r10.xyz, r10.xyzx, r4.wwww

#line 48
    nop 
    nop 
    nop 
    mov r10.xyz, r10.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z
    imul null, r4.w, r8.w, l(3)
    mov r11.xyz, cb0[r4.w + 9].xyzx  // r11.x <- lightColor.x; r11.y <- lightColor.y; r11.z <- lightColor.z

#line 130 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    mov r12.xyz, -r10.xyzx
    dp3 r4.w, r1.xyzx, r12.xyzx
    mul r4.w, r4.w, l(0.500000)
    add r4.w, r4.w, l(0.500000)
    max r4.w, r4.w, l(0.000000)
    min r12.x, r4.w, l(1.000000)  // r12.x <- u

#line 133
    mov r12.y, l(0.100000)
    sample_indexable(texture2d)(float,float,float,float) r12.xyz, r12.xyxx, t1.xyzw, s0  // r12.x <- c.x; r12.y <- c.y; r12.z <- c.z

#line 135
    mul r11.xyz, r11.xyzx, r12.xyzx
    mul r11.xyz, r5.xyzx, r11.xyzx  // r11.x <- <CalcToonDiffuse return value>.x; r11.y <- <CalcToonDiffuse return value>.y; r11.z <- <CalcToonDiffuse return value>.z

#line 48 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r11.xyz, r7.wwww, r11.xyzx
    add r8.xyz, r8.xyzx, r11.xyzx

#line 50
    nop 
    mov r1.xyz, r1.xyzx
    mov r10.xyz, r10.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z
    imul null, r4.w, r8.w, l(3)
    mov r11.xyz, cb0[r4.w + 9].xyzx  // r11.x <- lightColor.x; r11.y <- lightColor.y; r11.z <- lightColor.z

#line 74 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    dp3 r4.w, r10.xyzx, r1.xyzx
    add r4.w, r4.w, r4.w
    mov r4.w, -r4.w
    mul r12.xyz, r1.xyzx, r4.wwww
    add r10.xyz, r10.xyzx, r12.xyzx  // r10.x <- R.x; r10.y <- R.y; r10.z <- R.z

#line 78
    dp3 r4.w, r3.xyzx, r10.xyzx
    itof r9.w, l(0)
    max r4.w, r4.w, r9.w  // r4.w <- d

#line 84
    log r4.w, r4.w
    mul r4.w, r1.w, r4.w
    exp r4.w, r4.w  // r4.w <- d

#line 87
    mul r10.xyz, r4.wwww, r11.xyzx
    mul r10.xyz, r6.xyzx, r10.xyzx  // r10.x <- <CalcPhongSpecular return value>.x; r10.y <- <CalcPhongSpecular return value>.y; r10.z <- <CalcPhongSpecular return value>.z

#line 50 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r10.xyz, r7.wwww, r10.xyzx
    add r9.xyz, r9.xyzx, r10.xyzx

#line 51
  endif 
  or r4.w, r5.w, r6.w

#line 32
  if_z r4.w
    iadd r8.w, r8.w, l(1)
  endif 

#line 52
endif 

#line 32
not r3.w, r3.w
and r2.w, r2.w, r3.w
ilt r3.w, r8.w, cb0[64].x
and r2.w, r2.w, r3.w
not r3.w, r2.w
if_nz r2.w

#line 35
  mov r10.xyz, -cb0[23].xyzx
  add r10.xyz, r10.xyzx, v1.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z

#line 38
  dp3 r4.w, r10.xyzx, r10.xyzx
  sqrt r4.w, r4.w  // r4.w <- lightLength

#line 41
  ge r5.w, r4.w, cb0[25].x
  if_nz r5.w

#line 42
    iadd r8.w, l(1), l(5)
  else 
    mov r8.w, l(5)
  endif 

#line 45
  not r6.w, r5.w
  not r6.w, r6.w
  if_z r5.w
    imul null, r7.w, r8.w, l(3)
    div r7.w, r4.w, cb0[r7.w + 10].x
    mov r7.w, -r7.w
    add r7.w, r7.w, l(1.000000)
    max r7.w, r7.w, l(0.000000)
    min r7.w, r7.w, l(1.000000)  // r7.w <- attenuate

#line 47
    div r10.xyz, r10.xyzx, r4.wwww

#line 48
    nop 
    nop 
    nop 
    mov r10.xyz, r10.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z
    imul null, r4.w, r8.w, l(3)
    mov r11.xyz, cb0[r4.w + 9].xyzx  // r11.x <- lightColor.x; r11.y <- lightColor.y; r11.z <- lightColor.z

#line 130 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    mov r12.xyz, -r10.xyzx
    dp3 r4.w, r1.xyzx, r12.xyzx
    mul r4.w, r4.w, l(0.500000)
    add r4.w, r4.w, l(0.500000)
    max r4.w, r4.w, l(0.000000)
    min r12.x, r4.w, l(1.000000)  // r12.x <- u

#line 133
    mov r12.y, l(0.100000)
    sample_indexable(texture2d)(float,float,float,float) r12.xyz, r12.xyxx, t1.xyzw, s0  // r12.x <- c.x; r12.y <- c.y; r12.z <- c.z

#line 135
    mul r11.xyz, r11.xyzx, r12.xyzx
    mul r11.xyz, r5.xyzx, r11.xyzx  // r11.x <- <CalcToonDiffuse return value>.x; r11.y <- <CalcToonDiffuse return value>.y; r11.z <- <CalcToonDiffuse return value>.z

#line 48 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r11.xyz, r7.wwww, r11.xyzx
    add r8.xyz, r8.xyzx, r11.xyzx

#line 50
    nop 
    mov r1.xyz, r1.xyzx
    mov r10.xyz, r10.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z
    imul null, r4.w, r8.w, l(3)
    mov r11.xyz, cb0[r4.w + 9].xyzx  // r11.x <- lightColor.x; r11.y <- lightColor.y; r11.z <- lightColor.z

#line 74 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    dp3 r4.w, r10.xyzx, r1.xyzx
    add r4.w, r4.w, r4.w
    mov r4.w, -r4.w
    mul r12.xyz, r1.xyzx, r4.wwww
    add r10.xyz, r10.xyzx, r12.xyzx  // r10.x <- R.x; r10.y <- R.y; r10.z <- R.z

#line 78
    dp3 r4.w, r3.xyzx, r10.xyzx
    itof r9.w, l(0)
    max r4.w, r4.w, r9.w  // r4.w <- d

#line 84
    log r4.w, r4.w
    mul r4.w, r1.w, r4.w
    exp r4.w, r4.w  // r4.w <- d

#line 87
    mul r10.xyz, r4.wwww, r11.xyzx
    mul r10.xyz, r6.xyzx, r10.xyzx  // r10.x <- <CalcPhongSpecular return value>.x; r10.y <- <CalcPhongSpecular return value>.y; r10.z <- <CalcPhongSpecular return value>.z

#line 50 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r10.xyz, r7.wwww, r10.xyzx
    add r9.xyz, r9.xyzx, r10.xyzx

#line 51
  endif 
  or r4.w, r5.w, r6.w

#line 32
  if_z r4.w
    iadd r8.w, r8.w, l(1)
  endif 

#line 52
endif 

#line 32
not r3.w, r3.w
and r2.w, r2.w, r3.w
ilt r3.w, r8.w, cb0[64].x
and r2.w, r2.w, r3.w
not r3.w, r2.w
if_nz r2.w

#line 35
  mov r10.xyz, -cb0[26].xyzx
  add r10.xyz, r10.xyzx, v1.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z

#line 38
  dp3 r4.w, r10.xyzx, r10.xyzx
  sqrt r4.w, r4.w  // r4.w <- lightLength

#line 41
  ge r5.w, r4.w, cb0[28].x
  if_nz r5.w

#line 42
    iadd r8.w, l(1), l(6)
  else 
    mov r8.w, l(6)
  endif 

#line 45
  not r6.w, r5.w
  not r6.w, r6.w
  if_z r5.w
    imul null, r7.w, r8.w, l(3)
    div r7.w, r4.w, cb0[r7.w + 10].x
    mov r7.w, -r7.w
    add r7.w, r7.w, l(1.000000)
    max r7.w, r7.w, l(0.000000)
    min r7.w, r7.w, l(1.000000)  // r7.w <- attenuate

#line 47
    div r10.xyz, r10.xyzx, r4.wwww

#line 48
    nop 
    nop 
    nop 
    mov r10.xyz, r10.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z
    imul null, r4.w, r8.w, l(3)
    mov r11.xyz, cb0[r4.w + 9].xyzx  // r11.x <- lightColor.x; r11.y <- lightColor.y; r11.z <- lightColor.z

#line 130 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    mov r12.xyz, -r10.xyzx
    dp3 r4.w, r1.xyzx, r12.xyzx
    mul r4.w, r4.w, l(0.500000)
    add r4.w, r4.w, l(0.500000)
    max r4.w, r4.w, l(0.000000)
    min r12.x, r4.w, l(1.000000)  // r12.x <- u

#line 133
    mov r12.y, l(0.100000)
    sample_indexable(texture2d)(float,float,float,float) r12.xyz, r12.xyxx, t1.xyzw, s0  // r12.x <- c.x; r12.y <- c.y; r12.z <- c.z

#line 135
    mul r11.xyz, r11.xyzx, r12.xyzx
    mul r11.xyz, r5.xyzx, r11.xyzx  // r11.x <- <CalcToonDiffuse return value>.x; r11.y <- <CalcToonDiffuse return value>.y; r11.z <- <CalcToonDiffuse return value>.z

#line 48 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r11.xyz, r7.wwww, r11.xyzx
    add r8.xyz, r8.xyzx, r11.xyzx

#line 50
    nop 
    mov r1.xyz, r1.xyzx
    mov r10.xyz, r10.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z
    imul null, r4.w, r8.w, l(3)
    mov r11.xyz, cb0[r4.w + 9].xyzx  // r11.x <- lightColor.x; r11.y <- lightColor.y; r11.z <- lightColor.z

#line 74 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    dp3 r4.w, r10.xyzx, r1.xyzx
    add r4.w, r4.w, r4.w
    mov r4.w, -r4.w
    mul r12.xyz, r1.xyzx, r4.wwww
    add r10.xyz, r10.xyzx, r12.xyzx  // r10.x <- R.x; r10.y <- R.y; r10.z <- R.z

#line 78
    dp3 r4.w, r3.xyzx, r10.xyzx
    itof r9.w, l(0)
    max r4.w, r4.w, r9.w  // r4.w <- d

#line 84
    log r4.w, r4.w
    mul r4.w, r1.w, r4.w
    exp r4.w, r4.w  // r4.w <- d

#line 87
    mul r10.xyz, r4.wwww, r11.xyzx
    mul r10.xyz, r6.xyzx, r10.xyzx  // r10.x <- <CalcPhongSpecular return value>.x; r10.y <- <CalcPhongSpecular return value>.y; r10.z <- <CalcPhongSpecular return value>.z

#line 50 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r10.xyz, r7.wwww, r10.xyzx
    add r9.xyz, r9.xyzx, r10.xyzx

#line 51
  endif 
  or r4.w, r5.w, r6.w

#line 32
  if_z r4.w
    iadd r8.w, r8.w, l(1)
  endif 

#line 52
endif 

#line 32
not r3.w, r3.w
and r2.w, r2.w, r3.w
ilt r3.w, r8.w, cb0[64].x
and r2.w, r2.w, r3.w
if_nz r2.w

#line 35
  mov r10.xyz, -cb0[29].xyzx
  add r10.xyz, r10.xyzx, v1.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z

#line 38
  dp3 r2.w, r10.xyzx, r10.xyzx
  sqrt r2.w, r2.w  // r2.w <- lightLength

#line 41
  ge r3.w, r2.w, cb0[31].x

#line 45
  if_z r3.w
    div r3.w, r2.w, cb0[31].x
    mov r3.w, -r3.w
    add r3.w, r3.w, l(1.000000)
    max r3.w, r3.w, l(0.000000)
    min r3.w, r3.w, l(1.000000)  // r3.w <- attenuate

#line 47
    div r10.xyz, r10.xyzx, r2.wwww

#line 48
    nop 
    nop 
    nop 
    mov r10.xyz, r10.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z
    mov r11.xyz, cb0[30].xyzx  // r11.x <- lightColor.x; r11.y <- lightColor.y; r11.z <- lightColor.z

#line 130 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    mov r12.xyz, -r10.xyzx
    dp3 r2.w, r1.xyzx, r12.xyzx
    mul r2.w, r2.w, l(0.500000)
    add r2.w, r2.w, l(0.500000)
    max r2.w, r2.w, l(0.000000)
    min r12.x, r2.w, l(1.000000)  // r12.x <- u

#line 133
    mov r12.y, l(0.100000)
    sample_indexable(texture2d)(float,float,float,float) r12.xyz, r12.xyxx, t1.xyzw, s0  // r12.x <- c.x; r12.y <- c.y; r12.z <- c.z

#line 135
    mul r11.xyz, r11.xyzx, r12.xyzx
    mul r11.xyz, r5.xyzx, r11.xyzx  // r11.x <- <CalcToonDiffuse return value>.x; r11.y <- <CalcToonDiffuse return value>.y; r11.z <- <CalcToonDiffuse return value>.z

#line 48 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r11.xyz, r3.wwww, r11.xyzx
    add r8.xyz, r8.xyzx, r11.xyzx

#line 50
    nop 
    mov r1.xyz, r1.xyzx
    mov r10.xyz, r10.xyzx  // r10.x <- lightVector.x; r10.y <- lightVector.y; r10.z <- lightVector.z
    mov r11.xyz, cb0[30].xyzx  // r11.x <- lightColor.x; r11.y <- lightColor.y; r11.z <- lightColor.z

#line 74 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    dp3 r2.w, r10.xyzx, r1.xyzx
    add r2.w, r2.w, r2.w
    mov r2.w, -r2.w
    mul r12.xyz, r1.xyzx, r2.wwww
    add r10.xyz, r10.xyzx, r12.xyzx  // r10.x <- R.x; r10.y <- R.y; r10.z <- R.z

#line 78
    dp3 r2.w, r3.xyzx, r10.xyzx
    itof r4.w, l(0)
    max r2.w, r2.w, r4.w  // r2.w <- d

#line 84
    log r2.w, r2.w
    mul r2.w, r1.w, r2.w
    exp r2.w, r2.w  // r2.w <- d

#line 87
    mul r10.xyz, r2.wwww, r11.xyzx
    mul r10.xyz, r6.xyzx, r10.xyzx  // r10.x <- <CalcPhongSpecular return value>.x; r10.y <- <CalcPhongSpecular return value>.y; r10.z <- <CalcPhongSpecular return value>.z

#line 50 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r10.xyz, r3.wwww, r10.xyzx
    add r9.xyz, r9.xyzx, r10.xyzx

#line 51
  endif 

#line 52
endif 

#line 55
itof r10.xyz, l(0, 0, 0, 0)  // r10.x <- spotDiffuse.x; r10.y <- spotDiffuse.y; r10.z <- spotDiffuse.z

#line 56
itof r11.xyz, l(0, 0, 0, 0)  // r11.x <- spotSpecular.x; r11.y <- spotSpecular.y; r11.z <- spotSpecular.z

#line 57
mov r2.w, l(0)  // r2.w <- i
ilt r3.w, r2.w, cb0[64].y
not r4.w, r3.w
if_nz r3.w

#line 60
  mov r12.xyz, -cb0[32].xyzx
  add r12.xyz, r12.xyzx, v1.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z

#line 63
  dp3 r5.w, r12.xyzx, r12.xyzx
  sqrt r5.w, r5.w  // r5.w <- lightLength

#line 65
  ge r6.w, r5.w, cb0[35].x
  if_nz r6.w

#line 66
    iadd r2.w, r2.w, l(1)
  endif 

#line 69
  not r7.w, r6.w
  not r7.w, r7.w
  if_z r6.w
    imul null, r8.w, r2.w, l(4)
    div r5.w, r5.w, cb0[r8.w + 35].x
    mov r5.w, -r5.w
    add r5.w, r5.w, l(1.000000)
    max r5.w, r5.w, l(0.000000)
    min r5.w, r5.w, l(1.000000)  // r5.w <- attenuate

#line 71
    dp3 r8.w, r12.xyzx, r12.xyzx
    rsq r8.w, r8.w
    mul r12.xyz, r8.wwww, r12.xyzx

#line 74
    imul null, r8.w, r2.w, l(4)
    dp3 r9.w, cb0[r8.w + 33].xyzx, cb0[r8.w + 33].xyzx
    rsq r9.w, r9.w
    mul r13.xyz, r9.wwww, cb0[r8.w + 33].xyzx  // r13.x <- spotDirection.x; r13.y <- spotDirection.y; r13.z <- spotDirection.z

#line 75
    dp3 r8.w, r13.xyzx, r12.xyzx  // r8.w <- angle

#line 76
    imul null, r9.w, r2.w, l(4)
    imul null, r10.w, r2.w, l(4)
    mov r10.w, -cb0[r10.w + 35].z
    add r9.w, r10.w, cb0[r9.w + 35].y  // r9.w <- area

#line 77
    imul null, r10.w, r2.w, l(4)
    mov r8.w, -r8.w
    add r8.w, r8.w, cb0[r10.w + 35].y
    div r8.w, r8.w, r9.w
    mov r8.w, -r8.w
    add r8.w, r8.w, l(1.000000)
    max r8.w, r8.w, l(0.000000)
    min r8.w, r8.w, l(1.000000)
    mul r5.w, r5.w, r8.w

#line 79
    nop 
    nop 
    nop 
    mov r12.xyz, r12.xyzx
    imul null, r8.w, r2.w, l(4)
    mov r13.xyz, cb0[r8.w + 34].xyzx

#line 130 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    mov r14.xyz, -r12.xyzx
    dp3 r8.w, r1.xyzx, r14.xyzx
    mul r8.w, r8.w, l(0.500000)
    add r8.w, r8.w, l(0.500000)
    max r8.w, r8.w, l(0.000000)
    min r14.x, r8.w, l(1.000000)  // r14.x <- u

#line 133
    mov r14.y, l(0.100000)
    sample_indexable(texture2d)(float,float,float,float) r14.xyz, r14.xyxx, t1.xyzw, s0  // r14.x <- c.x; r14.y <- c.y; r14.z <- c.z

#line 135
    mul r13.xyz, r13.xyzx, r14.xyzx
    mul r13.xyz, r5.xyzx, r13.xyzx  // r13.x <- <CalcToonDiffuse return value>.x; r13.y <- <CalcToonDiffuse return value>.y; r13.z <- <CalcToonDiffuse return value>.z

#line 79 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r13.xyz, r5.wwww, r13.xyzx
    add r10.xyz, r10.xyzx, r13.xyzx

#line 81
    nop 
    mov r1.xyz, r1.xyzx
    mov r12.xyz, r12.xyzx
    imul null, r8.w, r2.w, l(4)
    mov r13.xyz, cb0[r8.w + 34].xyzx

#line 74 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    dp3 r8.w, r12.xyzx, r1.xyzx
    add r8.w, r8.w, r8.w
    mov r8.w, -r8.w
    mul r14.xyz, r1.xyzx, r8.wwww
    add r12.xyz, r12.xyzx, r14.xyzx  // r12.x <- R.x; r12.y <- R.y; r12.z <- R.z

#line 78
    dp3 r8.w, r3.xyzx, r12.xyzx
    itof r9.w, l(0)
    max r8.w, r8.w, r9.w  // r8.w <- d

#line 84
    log r8.w, r8.w
    mul r8.w, r1.w, r8.w
    exp r8.w, r8.w  // r8.w <- d

#line 87
    mul r12.xyz, r8.wwww, r13.xyzx
    mul r12.xyz, r6.xyzx, r12.xyzx  // r12.x <- <CalcPhongSpecular return value>.x; r12.y <- <CalcPhongSpecular return value>.y; r12.z <- <CalcPhongSpecular return value>.z

#line 81 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r12.xyz, r5.wwww, r12.xyzx
    add r11.xyz, r11.xyzx, r12.xyzx

#line 82
  endif 
  or r5.w, r6.w, r7.w

#line 57
  if_z r5.w
    iadd r2.w, r2.w, l(1)
  endif 

#line 83
endif 

#line 57
not r4.w, r4.w
and r3.w, r3.w, r4.w
ilt r4.w, r2.w, cb0[64].y
and r3.w, r3.w, r4.w
not r4.w, r3.w
ilt r5.w, r2.w, cb0[64].y
if_nz r5.w

#line 60
  mov r12.xyz, -cb0[36].xyzx
  add r12.xyz, r12.xyzx, v1.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z

#line 63
  dp3 r5.w, r12.xyzx, r12.xyzx
  sqrt r5.w, r5.w  // r5.w <- lightLength

#line 65
  ge r6.w, r5.w, cb0[39].x
  if_nz r6.w

#line 66
    iadd r7.w, l(1), l(1)  // r7.w <- i
  else   // Prior locations: r2.w <- i
    mov r7.w, l(1)  // r7.w <- i
  endif 

#line 69
  not r8.w, r6.w
  not r8.w, r8.w
  if_z r6.w
    imul null, r9.w, r7.w, l(4)
    div r5.w, r5.w, cb0[r9.w + 35].x
    mov r5.w, -r5.w
    add r5.w, r5.w, l(1.000000)
    max r5.w, r5.w, l(0.000000)
    min r5.w, r5.w, l(1.000000)  // r5.w <- attenuate

#line 71
    dp3 r9.w, r12.xyzx, r12.xyzx
    rsq r9.w, r9.w
    mul r12.xyz, r9.wwww, r12.xyzx

#line 74
    imul null, r9.w, r7.w, l(4)
    dp3 r10.w, cb0[r9.w + 33].xyzx, cb0[r9.w + 33].xyzx
    rsq r10.w, r10.w
    mul r13.xyz, r10.wwww, cb0[r9.w + 33].xyzx  // r13.x <- spotDirection.x; r13.y <- spotDirection.y; r13.z <- spotDirection.z

#line 75
    dp3 r9.w, r13.xyzx, r12.xyzx  // r9.w <- angle

#line 76
    imul null, r10.w, r7.w, l(4)
    imul null, r11.w, r7.w, l(4)
    mov r11.w, -cb0[r11.w + 35].z
    add r10.w, r11.w, cb0[r10.w + 35].y  // r10.w <- area

#line 77
    imul null, r11.w, r7.w, l(4)
    mov r9.w, -r9.w
    add r9.w, r9.w, cb0[r11.w + 35].y
    div r9.w, r9.w, r10.w
    mov r9.w, -r9.w
    add r9.w, r9.w, l(1.000000)
    max r9.w, r9.w, l(0.000000)
    min r9.w, r9.w, l(1.000000)
    mul r5.w, r5.w, r9.w

#line 79
    nop 
    nop 
    nop 
    mov r12.xyz, r12.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z
    imul null, r9.w, r7.w, l(4)
    mov r13.xyz, cb0[r9.w + 34].xyzx  // r13.x <- lightColor.x; r13.y <- lightColor.y; r13.z <- lightColor.z

#line 130 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    mov r14.xyz, -r12.xyzx
    dp3 r9.w, r1.xyzx, r14.xyzx
    mul r9.w, r9.w, l(0.500000)
    add r9.w, r9.w, l(0.500000)
    max r9.w, r9.w, l(0.000000)
    min r14.x, r9.w, l(1.000000)  // r14.x <- u

#line 133
    mov r14.y, l(0.100000)
    sample_indexable(texture2d)(float,float,float,float) r14.xyz, r14.xyxx, t1.xyzw, s0  // r14.x <- c.x; r14.y <- c.y; r14.z <- c.z

#line 135
    mul r13.xyz, r13.xyzx, r14.xyzx
    mul r13.xyz, r5.xyzx, r13.xyzx  // r13.x <- <CalcToonDiffuse return value>.x; r13.y <- <CalcToonDiffuse return value>.y; r13.z <- <CalcToonDiffuse return value>.z

#line 79 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r13.xyz, r5.wwww, r13.xyzx
    add r10.xyz, r10.xyzx, r13.xyzx

#line 81
    nop 
    mov r1.xyz, r1.xyzx
    mov r12.xyz, r12.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z
    imul null, r9.w, r7.w, l(4)
    mov r13.xyz, cb0[r9.w + 34].xyzx  // r13.x <- lightColor.x; r13.y <- lightColor.y; r13.z <- lightColor.z

#line 74 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    dp3 r9.w, r12.xyzx, r1.xyzx
    add r9.w, r9.w, r9.w
    mov r9.w, -r9.w
    mul r14.xyz, r1.xyzx, r9.wwww
    add r12.xyz, r12.xyzx, r14.xyzx  // r12.x <- R.x; r12.y <- R.y; r12.z <- R.z

#line 78
    dp3 r9.w, r3.xyzx, r12.xyzx
    itof r10.w, l(0)
    max r9.w, r9.w, r10.w  // r9.w <- d

#line 84
    log r9.w, r9.w
    mul r9.w, r1.w, r9.w
    exp r9.w, r9.w  // r9.w <- d

#line 87
    mul r12.xyz, r9.wwww, r13.xyzx
    mul r12.xyz, r6.xyzx, r12.xyzx  // r12.x <- <CalcPhongSpecular return value>.x; r12.y <- <CalcPhongSpecular return value>.y; r12.z <- <CalcPhongSpecular return value>.z

#line 81 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r12.xyz, r5.wwww, r12.xyzx
    add r11.xyz, r11.xyzx, r12.xyzx

#line 82
  endif 
  or r5.w, r6.w, r8.w

#line 57
  if_z r5.w
    iadd r7.w, r7.w, l(1)
  endif 

#line 83
else   // Prior locations: r2.w <- i
  mov r7.w, r2.w  // r7.w <- i
endif 

#line 57
not r4.w, r4.w
and r3.w, r3.w, r4.w
ilt r4.w, r7.w, cb0[64].y
and r3.w, r3.w, r4.w
not r4.w, r3.w
ilt r5.w, r2.w, cb0[64].y
ilt r6.w, r7.w, cb0[64].y
and r5.w, r5.w, r6.w
if_nz r5.w

#line 60
  mov r12.xyz, -cb0[40].xyzx
  add r12.xyz, r12.xyzx, v1.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z

#line 63
  dp3 r5.w, r12.xyzx, r12.xyzx
  sqrt r5.w, r5.w  // r5.w <- lightLength

#line 65
  ge r6.w, r5.w, cb0[43].x
  if_nz r6.w

#line 66
    iadd r8.w, l(1), l(2)  // r8.w <- i
  else   // Prior locations: r7.w <- i
    mov r8.w, l(2)  // r8.w <- i
  endif 

#line 69
  not r9.w, r6.w
  not r9.w, r9.w
  if_z r6.w
    imul null, r10.w, r8.w, l(4)
    div r5.w, r5.w, cb0[r10.w + 35].x
    mov r5.w, -r5.w
    add r5.w, r5.w, l(1.000000)
    max r5.w, r5.w, l(0.000000)
    min r5.w, r5.w, l(1.000000)  // r5.w <- attenuate

#line 71
    dp3 r10.w, r12.xyzx, r12.xyzx
    rsq r10.w, r10.w
    mul r12.xyz, r10.wwww, r12.xyzx

#line 74
    imul null, r10.w, r8.w, l(4)
    dp3 r11.w, cb0[r10.w + 33].xyzx, cb0[r10.w + 33].xyzx
    rsq r11.w, r11.w
    mul r13.xyz, r11.wwww, cb0[r10.w + 33].xyzx  // r13.x <- spotDirection.x; r13.y <- spotDirection.y; r13.z <- spotDirection.z

#line 75
    dp3 r10.w, r13.xyzx, r12.xyzx  // r10.w <- angle

#line 76
    imul null, r11.w, r8.w, l(4)
    imul null, r12.w, r8.w, l(4)
    mov r12.w, -cb0[r12.w + 35].z
    add r11.w, r12.w, cb0[r11.w + 35].y  // r11.w <- area

#line 77
    imul null, r12.w, r8.w, l(4)
    mov r10.w, -r10.w
    add r10.w, r10.w, cb0[r12.w + 35].y
    div r10.w, r10.w, r11.w
    mov r10.w, -r10.w
    add r10.w, r10.w, l(1.000000)
    max r10.w, r10.w, l(0.000000)
    min r10.w, r10.w, l(1.000000)
    mul r5.w, r5.w, r10.w

#line 79
    nop 
    nop 
    nop 
    mov r12.xyz, r12.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z
    imul null, r10.w, r8.w, l(4)
    mov r13.xyz, cb0[r10.w + 34].xyzx  // r13.x <- lightColor.x; r13.y <- lightColor.y; r13.z <- lightColor.z

#line 130 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    mov r14.xyz, -r12.xyzx
    dp3 r10.w, r1.xyzx, r14.xyzx
    mul r10.w, r10.w, l(0.500000)
    add r10.w, r10.w, l(0.500000)
    max r10.w, r10.w, l(0.000000)
    min r14.x, r10.w, l(1.000000)  // r14.x <- u

#line 133
    mov r14.y, l(0.100000)
    sample_indexable(texture2d)(float,float,float,float) r14.xyz, r14.xyxx, t1.xyzw, s0  // r14.x <- c.x; r14.y <- c.y; r14.z <- c.z

#line 135
    mul r13.xyz, r13.xyzx, r14.xyzx
    mul r13.xyz, r5.xyzx, r13.xyzx  // r13.x <- <CalcToonDiffuse return value>.x; r13.y <- <CalcToonDiffuse return value>.y; r13.z <- <CalcToonDiffuse return value>.z

#line 79 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r13.xyz, r5.wwww, r13.xyzx
    add r10.xyz, r10.xyzx, r13.xyzx

#line 81
    nop 
    mov r1.xyz, r1.xyzx
    mov r12.xyz, r12.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z
    imul null, r10.w, r8.w, l(4)
    mov r13.xyz, cb0[r10.w + 34].xyzx  // r13.x <- lightColor.x; r13.y <- lightColor.y; r13.z <- lightColor.z

#line 74 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    dp3 r10.w, r12.xyzx, r1.xyzx
    add r10.w, r10.w, r10.w
    mov r10.w, -r10.w
    mul r14.xyz, r1.xyzx, r10.wwww
    add r12.xyz, r12.xyzx, r14.xyzx  // r12.x <- R.x; r12.y <- R.y; r12.z <- R.z

#line 78
    dp3 r10.w, r3.xyzx, r12.xyzx
    itof r11.w, l(0)
    max r10.w, r10.w, r11.w  // r10.w <- d

#line 84
    log r10.w, r10.w
    mul r10.w, r1.w, r10.w
    exp r10.w, r10.w  // r10.w <- d

#line 87
    mul r12.xyz, r10.wwww, r13.xyzx
    mul r12.xyz, r6.xyzx, r12.xyzx  // r12.x <- <CalcPhongSpecular return value>.x; r12.y <- <CalcPhongSpecular return value>.y; r12.z <- <CalcPhongSpecular return value>.z

#line 81 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r12.xyz, r5.wwww, r12.xyzx
    add r11.xyz, r11.xyzx, r12.xyzx

#line 82
  endif 
  or r5.w, r6.w, r9.w

#line 57
  if_z r5.w
    iadd r8.w, r8.w, l(1)
  endif 

#line 83
else   // Prior locations: r7.w <- i
  mov r8.w, r7.w  // r8.w <- i
endif 

#line 57
not r4.w, r4.w
and r3.w, r3.w, r4.w
ilt r4.w, r8.w, cb0[64].y
and r3.w, r3.w, r4.w
not r4.w, r3.w
ilt r2.w, r2.w, cb0[64].y
ilt r5.w, r7.w, cb0[64].y
and r2.w, r2.w, r5.w
ilt r5.w, r8.w, cb0[64].y
and r2.w, r2.w, r5.w
if_nz r2.w

#line 60
  mov r12.xyz, -cb0[44].xyzx
  add r12.xyz, r12.xyzx, v1.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z

#line 63
  dp3 r2.w, r12.xyzx, r12.xyzx
  sqrt r2.w, r2.w  // r2.w <- lightLength

#line 65
  ge r5.w, r2.w, cb0[47].x
  if_nz r5.w

#line 66
    iadd r8.w, l(1), l(3)
  else 
    mov r8.w, l(3)
  endif 

#line 69
  not r6.w, r5.w
  not r6.w, r6.w
  if_z r5.w
    imul null, r7.w, r8.w, l(4)
    div r2.w, r2.w, cb0[r7.w + 35].x
    mov r2.w, -r2.w
    add r2.w, r2.w, l(1.000000)
    max r2.w, r2.w, l(0.000000)
    min r2.w, r2.w, l(1.000000)  // r2.w <- attenuate

#line 71
    dp3 r7.w, r12.xyzx, r12.xyzx
    rsq r7.w, r7.w
    mul r12.xyz, r7.wwww, r12.xyzx

#line 74
    imul null, r7.w, r8.w, l(4)
    dp3 r9.w, cb0[r7.w + 33].xyzx, cb0[r7.w + 33].xyzx
    rsq r9.w, r9.w
    mul r13.xyz, r9.wwww, cb0[r7.w + 33].xyzx  // r13.x <- spotDirection.x; r13.y <- spotDirection.y; r13.z <- spotDirection.z

#line 75
    dp3 r7.w, r13.xyzx, r12.xyzx  // r7.w <- angle

#line 76
    imul null, r9.w, r8.w, l(4)
    imul null, r10.w, r8.w, l(4)
    mov r10.w, -cb0[r10.w + 35].z
    add r9.w, r10.w, cb0[r9.w + 35].y  // r9.w <- area

#line 77
    imul null, r10.w, r8.w, l(4)
    mov r7.w, -r7.w
    add r7.w, r7.w, cb0[r10.w + 35].y
    div r7.w, r7.w, r9.w
    mov r7.w, -r7.w
    add r7.w, r7.w, l(1.000000)
    max r7.w, r7.w, l(0.000000)
    min r7.w, r7.w, l(1.000000)
    mul r2.w, r2.w, r7.w

#line 79
    nop 
    nop 
    nop 
    mov r12.xyz, r12.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z
    imul null, r7.w, r8.w, l(4)
    mov r13.xyz, cb0[r7.w + 34].xyzx  // r13.x <- lightColor.x; r13.y <- lightColor.y; r13.z <- lightColor.z

#line 130 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    mov r14.xyz, -r12.xyzx
    dp3 r7.w, r1.xyzx, r14.xyzx
    mul r7.w, r7.w, l(0.500000)
    add r7.w, r7.w, l(0.500000)
    max r7.w, r7.w, l(0.000000)
    min r14.x, r7.w, l(1.000000)  // r14.x <- u

#line 133
    mov r14.y, l(0.100000)
    sample_indexable(texture2d)(float,float,float,float) r14.xyz, r14.xyxx, t1.xyzw, s0  // r14.x <- c.x; r14.y <- c.y; r14.z <- c.z

#line 135
    mul r13.xyz, r13.xyzx, r14.xyzx
    mul r13.xyz, r5.xyzx, r13.xyzx  // r13.x <- <CalcToonDiffuse return value>.x; r13.y <- <CalcToonDiffuse return value>.y; r13.z <- <CalcToonDiffuse return value>.z

#line 79 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r13.xyz, r2.wwww, r13.xyzx
    add r10.xyz, r10.xyzx, r13.xyzx

#line 81
    nop 
    mov r1.xyz, r1.xyzx
    mov r12.xyz, r12.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z
    imul null, r7.w, r8.w, l(4)
    mov r13.xyz, cb0[r7.w + 34].xyzx  // r13.x <- lightColor.x; r13.y <- lightColor.y; r13.z <- lightColor.z

#line 74 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    dp3 r7.w, r12.xyzx, r1.xyzx
    add r7.w, r7.w, r7.w
    mov r7.w, -r7.w
    mul r14.xyz, r1.xyzx, r7.wwww
    add r12.xyz, r12.xyzx, r14.xyzx  // r12.x <- R.x; r12.y <- R.y; r12.z <- R.z

#line 78
    dp3 r7.w, r3.xyzx, r12.xyzx
    itof r9.w, l(0)
    max r7.w, r7.w, r9.w  // r7.w <- d

#line 84
    log r7.w, r7.w
    mul r7.w, r1.w, r7.w
    exp r7.w, r7.w  // r7.w <- d

#line 87
    mul r12.xyz, r7.wwww, r13.xyzx
    mul r12.xyz, r6.xyzx, r12.xyzx  // r12.x <- <CalcPhongSpecular return value>.x; r12.y <- <CalcPhongSpecular return value>.y; r12.z <- <CalcPhongSpecular return value>.z

#line 81 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r12.xyz, r2.wwww, r12.xyzx
    add r11.xyz, r11.xyzx, r12.xyzx

#line 82
  endif 
  or r2.w, r5.w, r6.w

#line 57
  if_z r2.w
    iadd r8.w, r8.w, l(1)
  endif 

#line 83
endif 

#line 57
not r2.w, r4.w
and r2.w, r2.w, r3.w
ilt r3.w, r8.w, cb0[64].y
and r2.w, r2.w, r3.w
not r3.w, r2.w
if_nz r2.w

#line 60
  mov r12.xyz, -cb0[48].xyzx
  add r12.xyz, r12.xyzx, v1.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z

#line 63
  dp3 r4.w, r12.xyzx, r12.xyzx
  sqrt r4.w, r4.w  // r4.w <- lightLength

#line 65
  ge r5.w, r4.w, cb0[51].x
  if_nz r5.w

#line 66
    iadd r8.w, l(1), l(4)
  else 
    mov r8.w, l(4)
  endif 

#line 69
  not r6.w, r5.w
  not r6.w, r6.w
  if_z r5.w
    imul null, r7.w, r8.w, l(4)
    div r4.w, r4.w, cb0[r7.w + 35].x
    mov r4.w, -r4.w
    add r4.w, r4.w, l(1.000000)
    max r4.w, r4.w, l(0.000000)
    min r4.w, r4.w, l(1.000000)  // r4.w <- attenuate

#line 71
    dp3 r7.w, r12.xyzx, r12.xyzx
    rsq r7.w, r7.w
    mul r12.xyz, r7.wwww, r12.xyzx

#line 74
    imul null, r7.w, r8.w, l(4)
    dp3 r9.w, cb0[r7.w + 33].xyzx, cb0[r7.w + 33].xyzx
    rsq r9.w, r9.w
    mul r13.xyz, r9.wwww, cb0[r7.w + 33].xyzx  // r13.x <- spotDirection.x; r13.y <- spotDirection.y; r13.z <- spotDirection.z

#line 75
    dp3 r7.w, r13.xyzx, r12.xyzx  // r7.w <- angle

#line 76
    imul null, r9.w, r8.w, l(4)
    imul null, r10.w, r8.w, l(4)
    mov r10.w, -cb0[r10.w + 35].z
    add r9.w, r10.w, cb0[r9.w + 35].y  // r9.w <- area

#line 77
    imul null, r10.w, r8.w, l(4)
    mov r7.w, -r7.w
    add r7.w, r7.w, cb0[r10.w + 35].y
    div r7.w, r7.w, r9.w
    mov r7.w, -r7.w
    add r7.w, r7.w, l(1.000000)
    max r7.w, r7.w, l(0.000000)
    min r7.w, r7.w, l(1.000000)
    mul r4.w, r4.w, r7.w

#line 79
    nop 
    nop 
    nop 
    mov r12.xyz, r12.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z
    imul null, r7.w, r8.w, l(4)
    mov r13.xyz, cb0[r7.w + 34].xyzx  // r13.x <- lightColor.x; r13.y <- lightColor.y; r13.z <- lightColor.z

#line 130 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    mov r14.xyz, -r12.xyzx
    dp3 r7.w, r1.xyzx, r14.xyzx
    mul r7.w, r7.w, l(0.500000)
    add r7.w, r7.w, l(0.500000)
    max r7.w, r7.w, l(0.000000)
    min r14.x, r7.w, l(1.000000)  // r14.x <- u

#line 133
    mov r14.y, l(0.100000)
    sample_indexable(texture2d)(float,float,float,float) r14.xyz, r14.xyxx, t1.xyzw, s0  // r14.x <- c.x; r14.y <- c.y; r14.z <- c.z

#line 135
    mul r13.xyz, r13.xyzx, r14.xyzx
    mul r13.xyz, r5.xyzx, r13.xyzx  // r13.x <- <CalcToonDiffuse return value>.x; r13.y <- <CalcToonDiffuse return value>.y; r13.z <- <CalcToonDiffuse return value>.z

#line 79 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r13.xyz, r4.wwww, r13.xyzx
    add r10.xyz, r10.xyzx, r13.xyzx

#line 81
    nop 
    mov r1.xyz, r1.xyzx
    mov r12.xyz, r12.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z
    imul null, r7.w, r8.w, l(4)
    mov r13.xyz, cb0[r7.w + 34].xyzx  // r13.x <- lightColor.x; r13.y <- lightColor.y; r13.z <- lightColor.z

#line 74 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    dp3 r7.w, r12.xyzx, r1.xyzx
    add r7.w, r7.w, r7.w
    mov r7.w, -r7.w
    mul r14.xyz, r1.xyzx, r7.wwww
    add r12.xyz, r12.xyzx, r14.xyzx  // r12.x <- R.x; r12.y <- R.y; r12.z <- R.z

#line 78
    dp3 r7.w, r3.xyzx, r12.xyzx
    itof r9.w, l(0)
    max r7.w, r7.w, r9.w  // r7.w <- d

#line 84
    log r7.w, r7.w
    mul r7.w, r1.w, r7.w
    exp r7.w, r7.w  // r7.w <- d

#line 87
    mul r12.xyz, r7.wwww, r13.xyzx
    mul r12.xyz, r6.xyzx, r12.xyzx  // r12.x <- <CalcPhongSpecular return value>.x; r12.y <- <CalcPhongSpecular return value>.y; r12.z <- <CalcPhongSpecular return value>.z

#line 81 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r12.xyz, r4.wwww, r12.xyzx
    add r11.xyz, r11.xyzx, r12.xyzx

#line 82
  endif 
  or r4.w, r5.w, r6.w

#line 57
  if_z r4.w
    iadd r8.w, r8.w, l(1)
  endif 

#line 83
endif 

#line 57
not r3.w, r3.w
and r2.w, r2.w, r3.w
ilt r3.w, r8.w, cb0[64].y
and r2.w, r2.w, r3.w
not r3.w, r2.w
if_nz r2.w

#line 60
  mov r12.xyz, -cb0[52].xyzx
  add r12.xyz, r12.xyzx, v1.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z

#line 63
  dp3 r4.w, r12.xyzx, r12.xyzx
  sqrt r4.w, r4.w  // r4.w <- lightLength

#line 65
  ge r5.w, r4.w, cb0[55].x
  if_nz r5.w

#line 66
    iadd r8.w, l(1), l(5)
  else 
    mov r8.w, l(5)
  endif 

#line 69
  not r6.w, r5.w
  not r6.w, r6.w
  if_z r5.w
    imul null, r7.w, r8.w, l(4)
    div r4.w, r4.w, cb0[r7.w + 35].x
    mov r4.w, -r4.w
    add r4.w, r4.w, l(1.000000)
    max r4.w, r4.w, l(0.000000)
    min r4.w, r4.w, l(1.000000)  // r4.w <- attenuate

#line 71
    dp3 r7.w, r12.xyzx, r12.xyzx
    rsq r7.w, r7.w
    mul r12.xyz, r7.wwww, r12.xyzx

#line 74
    imul null, r7.w, r8.w, l(4)
    dp3 r9.w, cb0[r7.w + 33].xyzx, cb0[r7.w + 33].xyzx
    rsq r9.w, r9.w
    mul r13.xyz, r9.wwww, cb0[r7.w + 33].xyzx  // r13.x <- spotDirection.x; r13.y <- spotDirection.y; r13.z <- spotDirection.z

#line 75
    dp3 r7.w, r13.xyzx, r12.xyzx  // r7.w <- angle

#line 76
    imul null, r9.w, r8.w, l(4)
    imul null, r10.w, r8.w, l(4)
    mov r10.w, -cb0[r10.w + 35].z
    add r9.w, r10.w, cb0[r9.w + 35].y  // r9.w <- area

#line 77
    imul null, r10.w, r8.w, l(4)
    mov r7.w, -r7.w
    add r7.w, r7.w, cb0[r10.w + 35].y
    div r7.w, r7.w, r9.w
    mov r7.w, -r7.w
    add r7.w, r7.w, l(1.000000)
    max r7.w, r7.w, l(0.000000)
    min r7.w, r7.w, l(1.000000)
    mul r4.w, r4.w, r7.w

#line 79
    nop 
    nop 
    nop 
    mov r12.xyz, r12.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z
    imul null, r7.w, r8.w, l(4)
    mov r13.xyz, cb0[r7.w + 34].xyzx  // r13.x <- lightColor.x; r13.y <- lightColor.y; r13.z <- lightColor.z

#line 130 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    mov r14.xyz, -r12.xyzx
    dp3 r7.w, r1.xyzx, r14.xyzx
    mul r7.w, r7.w, l(0.500000)
    add r7.w, r7.w, l(0.500000)
    max r7.w, r7.w, l(0.000000)
    min r14.x, r7.w, l(1.000000)  // r14.x <- u

#line 133
    mov r14.y, l(0.100000)
    sample_indexable(texture2d)(float,float,float,float) r14.xyz, r14.xyxx, t1.xyzw, s0  // r14.x <- c.x; r14.y <- c.y; r14.z <- c.z

#line 135
    mul r13.xyz, r13.xyzx, r14.xyzx
    mul r13.xyz, r5.xyzx, r13.xyzx  // r13.x <- <CalcToonDiffuse return value>.x; r13.y <- <CalcToonDiffuse return value>.y; r13.z <- <CalcToonDiffuse return value>.z

#line 79 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r13.xyz, r4.wwww, r13.xyzx
    add r10.xyz, r10.xyzx, r13.xyzx

#line 81
    nop 
    mov r1.xyz, r1.xyzx
    mov r12.xyz, r12.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z
    imul null, r7.w, r8.w, l(4)
    mov r13.xyz, cb0[r7.w + 34].xyzx  // r13.x <- lightColor.x; r13.y <- lightColor.y; r13.z <- lightColor.z

#line 74 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    dp3 r7.w, r12.xyzx, r1.xyzx
    add r7.w, r7.w, r7.w
    mov r7.w, -r7.w
    mul r14.xyz, r1.xyzx, r7.wwww
    add r12.xyz, r12.xyzx, r14.xyzx  // r12.x <- R.x; r12.y <- R.y; r12.z <- R.z

#line 78
    dp3 r7.w, r3.xyzx, r12.xyzx
    itof r9.w, l(0)
    max r7.w, r7.w, r9.w  // r7.w <- d

#line 84
    log r7.w, r7.w
    mul r7.w, r1.w, r7.w
    exp r7.w, r7.w  // r7.w <- d

#line 87
    mul r12.xyz, r7.wwww, r13.xyzx
    mul r12.xyz, r6.xyzx, r12.xyzx  // r12.x <- <CalcPhongSpecular return value>.x; r12.y <- <CalcPhongSpecular return value>.y; r12.z <- <CalcPhongSpecular return value>.z

#line 81 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r12.xyz, r4.wwww, r12.xyzx
    add r11.xyz, r11.xyzx, r12.xyzx

#line 82
  endif 
  or r4.w, r5.w, r6.w

#line 57
  if_z r4.w
    iadd r8.w, r8.w, l(1)
  endif 

#line 83
endif 

#line 57
not r3.w, r3.w
and r2.w, r2.w, r3.w
ilt r3.w, r8.w, cb0[64].y
and r2.w, r2.w, r3.w
not r3.w, r2.w
if_nz r2.w

#line 60
  mov r12.xyz, -cb0[56].xyzx
  add r12.xyz, r12.xyzx, v1.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z

#line 63
  dp3 r4.w, r12.xyzx, r12.xyzx
  sqrt r4.w, r4.w  // r4.w <- lightLength

#line 65
  ge r5.w, r4.w, cb0[59].x
  if_nz r5.w

#line 66
    iadd r8.w, l(1), l(6)
  else 
    mov r8.w, l(6)
  endif 

#line 69
  not r6.w, r5.w
  not r6.w, r6.w
  if_z r5.w
    imul null, r7.w, r8.w, l(4)
    div r4.w, r4.w, cb0[r7.w + 35].x
    mov r4.w, -r4.w
    add r4.w, r4.w, l(1.000000)
    max r4.w, r4.w, l(0.000000)
    min r4.w, r4.w, l(1.000000)  // r4.w <- attenuate

#line 71
    dp3 r7.w, r12.xyzx, r12.xyzx
    rsq r7.w, r7.w
    mul r12.xyz, r7.wwww, r12.xyzx

#line 74
    imul null, r7.w, r8.w, l(4)
    dp3 r9.w, cb0[r7.w + 33].xyzx, cb0[r7.w + 33].xyzx
    rsq r9.w, r9.w
    mul r13.xyz, r9.wwww, cb0[r7.w + 33].xyzx  // r13.x <- spotDirection.x; r13.y <- spotDirection.y; r13.z <- spotDirection.z

#line 75
    dp3 r7.w, r13.xyzx, r12.xyzx  // r7.w <- angle

#line 76
    imul null, r9.w, r8.w, l(4)
    imul null, r10.w, r8.w, l(4)
    mov r10.w, -cb0[r10.w + 35].z
    add r9.w, r10.w, cb0[r9.w + 35].y  // r9.w <- area

#line 77
    imul null, r10.w, r8.w, l(4)
    mov r7.w, -r7.w
    add r7.w, r7.w, cb0[r10.w + 35].y
    div r7.w, r7.w, r9.w
    mov r7.w, -r7.w
    add r7.w, r7.w, l(1.000000)
    max r7.w, r7.w, l(0.000000)
    min r7.w, r7.w, l(1.000000)
    mul r4.w, r4.w, r7.w

#line 79
    nop 
    nop 
    nop 
    mov r12.xyz, r12.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z
    imul null, r7.w, r8.w, l(4)
    mov r13.xyz, cb0[r7.w + 34].xyzx  // r13.x <- lightColor.x; r13.y <- lightColor.y; r13.z <- lightColor.z

#line 130 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    mov r14.xyz, -r12.xyzx
    dp3 r7.w, r1.xyzx, r14.xyzx
    mul r7.w, r7.w, l(0.500000)
    add r7.w, r7.w, l(0.500000)
    max r7.w, r7.w, l(0.000000)
    min r14.x, r7.w, l(1.000000)  // r14.x <- u

#line 133
    mov r14.y, l(0.100000)
    sample_indexable(texture2d)(float,float,float,float) r14.xyz, r14.xyxx, t1.xyzw, s0  // r14.x <- c.x; r14.y <- c.y; r14.z <- c.z

#line 135
    mul r13.xyz, r13.xyzx, r14.xyzx
    mul r13.xyz, r5.xyzx, r13.xyzx  // r13.x <- <CalcToonDiffuse return value>.x; r13.y <- <CalcToonDiffuse return value>.y; r13.z <- <CalcToonDiffuse return value>.z

#line 79 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r13.xyz, r4.wwww, r13.xyzx
    add r10.xyz, r10.xyzx, r13.xyzx

#line 81
    nop 
    mov r1.xyz, r1.xyzx
    mov r12.xyz, r12.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z
    imul null, r7.w, r8.w, l(4)
    mov r13.xyz, cb0[r7.w + 34].xyzx  // r13.x <- lightColor.x; r13.y <- lightColor.y; r13.z <- lightColor.z

#line 74 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    dp3 r7.w, r12.xyzx, r1.xyzx
    add r7.w, r7.w, r7.w
    mov r7.w, -r7.w
    mul r14.xyz, r1.xyzx, r7.wwww
    add r12.xyz, r12.xyzx, r14.xyzx  // r12.x <- R.x; r12.y <- R.y; r12.z <- R.z

#line 78
    dp3 r7.w, r3.xyzx, r12.xyzx
    itof r9.w, l(0)
    max r7.w, r7.w, r9.w  // r7.w <- d

#line 84
    log r7.w, r7.w
    mul r7.w, r1.w, r7.w
    exp r7.w, r7.w  // r7.w <- d

#line 87
    mul r12.xyz, r7.wwww, r13.xyzx
    mul r12.xyz, r6.xyzx, r12.xyzx  // r12.x <- <CalcPhongSpecular return value>.x; r12.y <- <CalcPhongSpecular return value>.y; r12.z <- <CalcPhongSpecular return value>.z

#line 81 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r12.xyz, r4.wwww, r12.xyzx
    add r11.xyz, r11.xyzx, r12.xyzx

#line 82
  endif 
  or r4.w, r5.w, r6.w

#line 57
  if_z r4.w
    iadd r8.w, r8.w, l(1)
  endif 

#line 83
endif 

#line 57
not r3.w, r3.w
and r2.w, r2.w, r3.w
ilt r3.w, r8.w, cb0[64].y
and r2.w, r2.w, r3.w
if_nz r2.w

#line 60
  mov r12.xyz, -cb0[60].xyzx
  add r12.xyz, r12.xyzx, v1.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z

#line 63
  dp3 r2.w, r12.xyzx, r12.xyzx
  sqrt r2.w, r2.w  // r2.w <- lightLength

#line 65
  ge r3.w, r2.w, cb0[63].x

#line 69
  if_z r3.w
    div r2.w, r2.w, cb0[63].x
    mov r2.w, -r2.w
    add r2.w, r2.w, l(1.000000)
    max r2.w, r2.w, l(0.000000)
    min r2.w, r2.w, l(1.000000)  // r2.w <- attenuate

#line 71
    dp3 r3.w, r12.xyzx, r12.xyzx
    rsq r3.w, r3.w
    mul r12.xyz, r3.wwww, r12.xyzx

#line 74
    dp3 r3.w, cb0[61].xyzx, cb0[61].xyzx
    rsq r3.w, r3.w
    mul r13.xyz, r3.wwww, cb0[61].xyzx  // r13.x <- spotDirection.x; r13.y <- spotDirection.y; r13.z <- spotDirection.z

#line 75
    dp3 r3.w, r13.xyzx, r12.xyzx  // r3.w <- angle

#line 76
    mov r4.w, -cb0[63].z
    add r4.w, r4.w, cb0[63].y  // r4.w <- area

#line 77
    mov r3.w, -r3.w
    add r3.w, r3.w, cb0[63].y
    div r3.w, r3.w, r4.w
    mov r3.w, -r3.w
    add r3.w, r3.w, l(1.000000)
    max r3.w, r3.w, l(0.000000)
    min r3.w, r3.w, l(1.000000)
    mul r2.w, r2.w, r3.w

#line 79
    nop 
    nop 
    nop 
    mov r12.xyz, r12.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z
    mov r13.xyz, cb0[62].xyzx  // r13.x <- lightColor.x; r13.y <- lightColor.y; r13.z <- lightColor.z

#line 130 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    mov r14.xyz, -r12.xyzx
    dp3 r3.w, r1.xyzx, r14.xyzx
    mul r3.w, r3.w, l(0.500000)
    add r3.w, r3.w, l(0.500000)
    max r3.w, r3.w, l(0.000000)
    min r14.x, r3.w, l(1.000000)  // r14.x <- u

#line 133
    mov r14.y, l(0.100000)
    sample_indexable(texture2d)(float,float,float,float) r14.xyz, r14.xyxx, t1.xyzw, s0  // r14.x <- c.x; r14.y <- c.y; r14.z <- c.z

#line 135
    mul r13.xyz, r13.xyzx, r14.xyzx
    mul r5.xyz, r5.xyzx, r13.xyzx  // r5.x <- <CalcToonDiffuse return value>.x; r5.y <- <CalcToonDiffuse return value>.y; r5.z <- <CalcToonDiffuse return value>.z

#line 79 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r5.xyz, r2.wwww, r5.xyzx
    add r10.xyz, r5.xyzx, r10.xyzx

#line 81
    nop 
    mov r1.xyz, r1.xyzx
    mov r12.xyz, r12.xyzx  // r12.x <- lightVector.x; r12.y <- lightVector.y; r12.z <- lightVector.z
    mov r5.xyz, cb0[62].xyzx  // r5.x <- lightColor.x; r5.y <- lightColor.y; r5.z <- lightColor.z

#line 74 "D:\Employment_Works\Ruins of La Mer\HLSL\Light.hlsli"
    dp3 r3.w, r12.xyzx, r1.xyzx
    add r3.w, r3.w, r3.w
    mov r3.w, -r3.w
    mul r1.xyz, r1.xyzx, r3.wwww
    add r1.xyz, r12.xyzx, r1.xyzx  // r1.x <- R.x; r1.y <- R.y; r1.z <- R.z

#line 78
    dp3 r1.x, r3.xyzx, r1.xyzx
    itof r1.y, l(0)
    max r1.x, r1.y, r1.x  // r1.x <- d

#line 84
    log r1.x, r1.x
    mul r1.x, r1.x, r1.w
    exp r1.x, r1.x  // r1.x <- d

#line 87
    mul r1.xyz, r1.xxxx, r5.xyzx
    mul r1.xyz, r6.xyzx, r1.xyzx  // r1.x <- <CalcPhongSpecular return value>.x; r1.y <- <CalcPhongSpecular return value>.y; r1.z <- <CalcPhongSpecular return value>.z

#line 81 "D:\Employment_Works\Ruins of La Mer\HLSL\ToonPS.hlsl"
    mul r1.xyz, r2.wwww, r1.xyzx
    add r11.xyz, r1.xyzx, r11.xyzx

#line 82
  endif 

#line 83
endif 

#line 85
mov r4.xyz, r4.xyzx  // r4.x <- color.x; r4.y <- color.y; r4.z <- color.z
mov r0.w, r0.w  // r0.w <- color.w

#line 86
add r1.xyz, r7.xyzx, r8.xyzx
add r1.xyz, r10.xyzx, r1.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
add r0.xyz, r0.xyzx, r4.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 87
add r1.xyz, r2.xyzx, r9.xyzx
add r1.xyz, r11.xyzx, r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx

#line 89
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 1337 instruction slots used
