//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   float4 viewPosition;               // Offset:    0 Size:    16
//   row_major float4x4 inverseView;    // Offset:   16 Size:    64 [unused]
//   row_major float4x4 inverseProjection;// Offset:   80 Size:    64 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler0                          sampler      NA          NA             s0      1 
// texture0                          texture  float4          2d             t0      1 
// CbScene                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// POSITION                 0   xyz         2     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.color.x; v1.y <- pin.color.y; v1.z <- pin.color.z; v1.w <- pin.color.w; 
//   v2.x <- pin.worldPosition.x; v2.y <- pin.worldPosition.y; v2.z <- pin.worldPosition.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 9 "C:\Users\sukai\Desktop\Ruins of La Mer\Ruins of La Mer\HLSL\SkyboxPS.hlsl"
mov r0.xyz, -cb0[0].xyzx
add r0.xyz, r0.xyzx, v2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx  // r0.x <- E.x; r0.y <- E.y; r0.z <- E.z

#line 14
mov r0.w, -r0.z
max r0.w, r0.w, r0.z
mov r1.x, -r0.x
max r1.y, r0.x, r1.x
min r1.z, r0.w, r1.y
max r1.w, r0.w, r1.y
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
mul r1.z, r1.w, r1.z
mul r1.w, r1.z, r1.z
mul r2.x, r1.w, l(0.020835)
add r2.x, r2.x, l(-0.085133)
mul r2.x, r1.w, r2.x
add r2.x, r2.x, l(0.180141)
mul r2.x, r1.w, r2.x
add r2.x, r2.x, l(-0.330299)
mul r1.w, r1.w, r2.x
add r1.w, r1.w, l(0.999866)
mul r1.z, r1.w, r1.z
lt r0.w, r1.y, r0.w
mul r1.y, r1.z, l(-2.000000)
add r1.y, r1.y, l(1.570796)
and r0.w, r0.w, r1.y
add r0.w, r1.z, r0.w
lt r1.x, r0.x, r1.x
and r1.x, r1.x, l(0xc0490fdb)
add r0.w, r0.w, r1.x
min r1.x, r0.x, r0.z
max r1.y, r0.x, r0.z
mov r1.z, -r1.x
lt r1.x, r1.x, r1.z
mov r1.z, -r1.y
ge r1.y, r1.y, r1.z
and r1.x, r1.y, r1.x
mov r1.y, -r0.w
movc r0.w, r1.x, r1.y, r0.w
div r0.w, r0.w, l(2.000000)
mov r0.w, -r0.w
add r1.x, r0.w, l(1.000000)  // r1.x <- texcoord.x
dp2 r0.x, r0.xzxx, r0.xzxx
sqrt r0.x, r0.x
mov r0.z, -r0.y
max r0.z, r0.z, r0.y
mov r0.w, -r0.x
max r1.z, r0.w, r0.x
min r1.w, r0.z, r1.z
max r2.x, r0.z, r1.z
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
mul r1.w, r1.w, r2.x
mul r2.x, r1.w, r1.w
mul r2.y, r2.x, l(0.020835)
add r2.y, r2.y, l(-0.085133)
mul r2.y, r2.y, r2.x
add r2.y, r2.y, l(0.180141)
mul r2.y, r2.y, r2.x
add r2.y, r2.y, l(-0.330299)
mul r2.x, r2.y, r2.x
add r2.x, r2.x, l(0.999866)
mul r1.w, r1.w, r2.x
lt r0.z, r1.z, r0.z
mul r1.z, r1.w, l(-2.000000)
add r1.z, r1.z, l(1.570796)
and r0.z, r0.z, r1.z
add r0.z, r1.w, r0.z
lt r0.w, r0.x, r0.w
and r0.w, r0.w, l(0xc0490fdb)
add r0.z, r0.w, r0.z
min r0.w, r0.x, r0.y
max r0.x, r0.x, r0.y
mov r0.y, -r0.w
lt r0.y, r0.w, r0.y
mov r0.w, -r0.x
ge r0.x, r0.x, r0.w
and r0.x, r0.x, r0.y
mov r0.y, -r0.z
movc r0.x, r0.x, r0.y, r0.z
mov r1.y, -r0.x  // r1.y <- texcoord.y

#line 15
div r0.xy, r1.xyxx, l(3.140000, 3.140000, 0.000000, 0.000000)
add r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // r0.x <- texcoord.x; r0.y <- texcoord.y

#line 18
itof r0.z, l(0)
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.xyxx, t0.xyzw, s0, r0.z
mul o0.xyzw, r0.xyzw, v1.xyzw
ret 
// Approximately 87 instruction slots used
